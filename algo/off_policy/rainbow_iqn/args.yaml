---
n_experiments: 0 # 1 run the following configuration, otherwise, run test code in parallel see train.py
env:
    name: &env_name LunarLander-v2  # CartPole-v0 or LunarLander-v2
    max_episode_steps: 1000
    seed: 0
agent:
    background_learning: True
    gamma: &gamma 0.99
    polyak: 0.995
    algorithm: rainbow-iqn
    batch_size: 512
    prefetches: 5

    # model path: model_root_dir/model_name/model_name, two model_names ensure each model saved in an independent folder
    # tensorboard path: log_root_dir/model_name
    model_root_dir: saved_models            # root path for savinng models
    log_root_dir: logs  # root path for tensorboard logs
    model_name: baseline

    n_epochs: 5000
    n_steps: 3
    loss_type: huber   # huber or mse
    target_update_freq: 10000
    
    Qnets:
        noisy_sigma: 0.5    # standard deviation for noisy layers
        algo: iqn           # double, duel, iqn
        N: 8                # N in paper, num of quantiles for online quantile network
        N_prime: 8          # N' in paper, num of quantiles for target quantile network
        K: 32               # K in paper, num of quantiles for action selection
        delta: 1            # kappa in paper, used in huber loss
        quantile_embedding_dim: 64
        # args for optimizer
        learning_rate: 3e-3
        decay_rate: 1
        decay_steps: 1e4
        epsilon: 1e-4
        psi_units: [128]
        f_units: [64]
    env_stats:
        times: 1
        stats: [score, avg_score, eps_len, avg_eps_len]

# argumennts for prioritized replay
buffer:
    type: proportional # local or proportional

    alpha: 0.5
    beta0: 0.4
    epsilon: 1e-4
    beta_steps: 1e5
    min_size: 1e3
    capacity: 1e6

    tb_capacity: 10